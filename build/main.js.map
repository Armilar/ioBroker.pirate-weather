{
  "version": 3,
  "sources": ["../src/main.ts"],
  "sourcesContent": ["/*\n * Created with @iobroker/create-adapter v2.6.5\n */\n\n// The adapter-core module gives you access to the core ioBroker functions\n// you need to create an adapter\nimport * as utils from '@iobroker/adapter-core';\nimport axios from 'axios';\nimport 'source-map-support/register';\nimport { Library } from './lib/library';\nimport { genericStateObjects, setUnits, type PirateWeatherTestdata } from './lib/definition';\n\naxios.defaults.timeout = 10000; // Set a default timeout of 10 seconds for all axios requests\n\nclass PirateWeather extends utils.Adapter {\n    library: Library;\n    unload: boolean = false;\n    getWeatherLoopTimeout: ioBroker.Timeout | undefined | null = null;\n    public constructor(options: Partial<utils.AdapterOptions> = {}) {\n        super({\n            ...options,\n            name: 'pirate-weather',\n            useFormatDate: true, // Use formatDate from utils\n        });\n        this.on('ready', this.onReady.bind(this));\n        // this.on('stateChange', this.onStateChange.bind(this));\n        // this.on('objectChange', this.onObjectChange.bind(this));\n        // this.on('message', this.onMessage.bind(this));\n        this.on('unload', this.onUnload.bind(this));\n        this.library = new Library(this, 'PirateWeather');\n    }\n\n    /**\n     * Is called when databases are connected and adapter received configuration.\n     */\n    private async onReady(): Promise<void> {\n        if (this.config.pollInterval < 1) {\n            this.log.warn(`Invalid poll interval: ${this.config.pollInterval}. Using default value of 1 hour.`);\n            this.config.pollInterval = 1; // Default to 1 minute if invalid\n        }\n        if (!this.config.apiToken) {\n            this.log.error('API token is not set in the adapter configuration. Please set it in the adapter settings.');\n            return;\n        }\n        if (\n            !this.config.position ||\n            typeof this.config.position !== 'string' ||\n            !this.config.position.split(',').every(coord => !isNaN(parseFloat(coord)))\n        ) {\n            this.log.error('Position is not set in the adapter configuration. Please set it in the adapter settings.');\n            return;\n        }\n        if (this.config.hours < 0 || this.config.hours > 48) {\n            this.log.warn(`Invalid hours to display: ${this.config.hours}. Using default value of 24 hours.`);\n            this.config.hours = 24; // Default to 24 hours if invalid\n        }\n        setUnits(this.config.units);\n        await this.library.init();\n        const states = await this.getStatesAsync('*');\n        await this.library.initStates(states);\n        await this.delay(1000); // Wait for 1 second to ensure the library is fully initialized\n        await this.getPirateWeatherLoop();\n    }\n\n    getPirateWeatherLoop = async (): Promise<void> => {\n        try {\n            if (this.getWeatherLoopTimeout) {\n                this.clearTimeout(this.getWeatherLoopTimeout);\n            }\n            await this.getData();\n            await this.setState('info.connection', true, true);\n        } catch (error) {\n            this.log.error(`Error in getPirateWeatherLoop: ${JSON.stringify(error)}`);\n            await this.setState('info.connection', false, true);\n        } finally {\n            const loopTime =\n                new Date().setHours(new Date().getHours() + this.config.pollInterval, 0, 0) +\n                100 +\n                Math.floor(Math.random() * 3000); // Add a random delay of up to 3 second\n            this.getWeatherLoopTimeout = this.setTimeout(() => {\n                void this.getPirateWeatherLoop();\n            }, loopTime - Date.now());\n        }\n    };\n\n    getData = async (): Promise<void> => {\n        try {\n            const result = await axios.get(\n                `https://api.pirateweather.net/forecast/${this.config.apiToken}/${this.config.position}?units=${this.config.units || 'si'}&icon=pirate`,\n            );\n            if (result.status === 200) {\n                const data = result.data as PirateWeatherTestdata;\n                this.log.debug(`Data fetched successfully: ${JSON.stringify(data)}`);\n                if (data.flags) {\n                    data.units = data.flags.units;\n                    data['nearest-station'] = data.flags['nearest-station'];\n                    data.version = data.flags.version;\n                    delete data.flags;\n                    delete result.data.flags;\n                }\n                if (data.hourly && data.hourly.data) {\n                    if (this.config.hours > 0) {\n                        data.hourly.data = data.hourly.data.slice(0, this.config.hours);\n                    } else {\n                        data.hourly.data = [];\n                    }\n                }\n                for (const d of [data.hourly.data, data.daily.data, [data.currently]]) {\n                    if (d && d.length) {\n                        for (let a = 0; a < d.length; a++) {\n                            d[a].windBearingText = this.getWindBearingText(d[a].windBearing);\n                            d[a].cloudCover = Math.round(d[a].cloudCover * 100);\n                            d[a].precipProbability = Math.round(d[a].precipProbability * 100);\n                            d[a].humidity = Math.round(d[a].humidity * 100);\n                            if (d === data.daily.data) {\n                                d[a].moonPhase = Math.round(d[a].moonPhase * 100);\n                            }\n                        }\n                    }\n                }\n                if (!this.config.minutes) {\n                    // Remove minute-by-minute data if not configured\n                    delete data.minutely;\n                }\n                await this.library.writeFromJson('weather', 'weather', genericStateObjects, data, true);\n            }\n        } catch (error) {\n            this.log.error(`Error fetching data from Pirate Weather API: ${JSON.stringify(error)}`);\n        }\n    };\n\n    private onUnload(callback: () => void): void {\n        try {\n            void this.setState('info.connection', false, true);\n            if (this.getWeatherLoopTimeout) {\n                this.clearTimeout(this.getWeatherLoopTimeout);\n            }\n\n            callback();\n        } catch {\n            callback();\n        }\n    }\n    private getWindBearingText(windBearing: number | undefined): string {\n        if (windBearing === undefined) {\n            return '';\n        }\n        const directions = [\n            'N',\n            'NNE',\n            'NE',\n            'ENE',\n            'E',\n            'ESE',\n            'SE',\n            'SSE',\n            'S',\n            'SSW',\n            'SW',\n            'WSW',\n            'W',\n            'WNW',\n            'NW',\n            'NNW',\n        ];\n        const index = Math.round((windBearing % 360) / 22.5) % 16;\n        return directions[index];\n    }\n}\n\nif (require.main !== module) {\n    // Export the constructor in compact mode\n    module.exports = (options: Partial<utils.AdapterOptions> | undefined) => new PirateWeather(options);\n} else {\n    // otherwise start the instance directly\n    (() => new PirateWeather())();\n}\n"],
  "mappings": "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",
  "names": ["axios"]
}
